apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: n8n
    role: app
  name: n8n
  namespace: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
        role: app
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      containers:
        - image: ghcr.io/n8n-io/n8n:1.106.1
          name: n8n
          ports:
            - containerPort: 5678
          securityContext:
            allowPrivilegeEscalation: false
          env:
            - name: DB_TYPE
              value: postgresdb
            - name: GENERIC_TIMEZONE
              value: Europe/Stockholm
            - name: N8N_HOST
              value: n8n.christophervestman.com
            - name: N8N_PORT
              value: "5678"
            - name: N8N_PROTOCOL
              value: http
            - name: N8N_PROXY_HOPS
              value: "1"
            - name: N8N_RUNNERS_ENABLED
              value: "true"
            - name: N8N_SECURE_COOKIE
              value: "false"
            - name: NODE_ENV
              value: production
            - name: DB_POSTGRESDB_DATABASE
              value: app
            - name: DB_POSTGRESDB_HOST
              value: n8n-db-rw
            - name: DB_POSTGRESDB_USER
              value: app
            - name: WEBHOOK_URL
              value: https://n8n.christophervestman.com/
          envFrom:
            - secretRef:
                name: postgres-env-secret
          volumeMounts:
            - mountPath: /home/node/.n8n
              name: n8n-data
      restartPolicy: Always
      volumes:
        - name: n8n-data
          persistentVolumeClaim:
            claimName: n8n-data-pvc
